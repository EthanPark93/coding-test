// 알고리즘 문제를 풀이할 때, 초기 아이디어의 중요성을 많이 배울 수 있었던 문제입니다.
// 물에 해당하는 0을 초기값으로 두고, 양 옆에 음식 갯수만큼 해당 숫자를 붙여주는 핵심 아이디어가 관건.

// 이 컨셉을 생각하지 못한 처음 풀이는 food 배열을 앞에서부터 처리하고 배열을 끝값 기준으로 뒤집어서 붙였다.
// 이 풀이를 생각한 이후로, 이전 풀이는 코드 낭비도 심하고 문제의 핵심을 짚지 못한 풀이였다고 느꼈다.

class 푸드파이터대회 {
    public String solution(int[] food) {
        String answer = "0";

        for (int i = food.length - 1; i > 0; i--) { // 0을 기준으로 양 옆에 음식을 배치하기 때문에 배열 끝 값부터 순회
            for (int j = 0; j < food[i] / 2; j++) { // 음식을 반으로 나눈 만큼 반복해서 음식 추가, int 타입이기에 나머지 자동 필터링
                answer = i + answer + i; // 음식을 옆에 배치하는 로직이며, String 타입으로 자동 형 변환이 이루어짐.
            }
        }

        return answer;
    }
}
